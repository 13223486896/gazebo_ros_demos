<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rrbot_gazebo)/world/rrbot.world"/>
    <!-- more default parameters can be changed here -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find rrbot_description)/urdf/rrbot.xacro'" />
  <!--param name="robot_description"
      command="cat '$(find rrbot_description)/urdf/rrbot.xml'" /-->

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model rrbot -param robot_description"/>

  <!-- ros_control settings -->
  <!-- load the controllers -->
  <node name="join1_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/rrbot/ros_control"
	args="--namespace=/rrbot/ros_control/
	      joint1_position_controller
	      joint2_position_controller">
    <rosparam>
      joint1_position_controller:
        type: effort_controllers/JointPositionController
        joint: joint1
        pid: {p: 100.0, i: 0.01, d: 10.0}
      joint2_position_controller:
        type: effort_controllers/JointPositionController
        joint: joint2
        pid: {p: 100.0, i: 0.01, d: 10.0}
    </rosparam>
  </node>

</launch>
